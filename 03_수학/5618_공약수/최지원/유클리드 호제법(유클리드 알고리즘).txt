유클리드 호제법(유클리드 알고리즘)
2개의 자연수의 최대공약수를 구하는 알고리즘.
(a > b일 때) a % b = r이면, a와 b의 최대공약수 = b와 r의 최대공약수
(a % b = r)
b % r = r'
r % r'=r''
...
나머지가 0이 되었을 때의 r이 a와 b의 최대공약수

ex.
a = 26 , b = 12
26 % 12 = 2
12 % 2 = 0 => 나머지가 0이 되었으니 26과 12의 최대공약수는 2.
(2 % 0)


알고리즘으로 구현하면

public static int gcd(int p, int q)  { //이 때 p > q이어야 함)
  if (q == 0)  {  //위의 26, 12 예시에서 2 % 0(q) 인 상황.
    return p; // 최대공약수 p 리턴
  }
  return gcd(q, p%q); //q가 0이 아니라면 다시 q와 'p를 q로 나눈 나머지'를 두고 반복
}


최소공배수 : 두 수의 최대공약수 * 두 수의 나머지들
두 수 곱/최대공약수 
