import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class bj15724 {    
    public static void main(String[] args) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	StringTokenizer st = new StringTokenizer(br.readLine());
    	int n = Integer.parseInt(st.nextToken());
    	int m = Integer.parseInt(st.nextToken());
    	int[][] map = new int[n + 1][m + 1];
    	for (int i = 1; i <= n; i++) {
    		st = new StringTokenizer(br.readLine());
    		for (int j = 1; j <= m; j++) { // 애초에 입력 받을 때 누적합을 구해준다.
    			map[i][j] = Integer.parseInt(st.nextToken()) + map[i - 1][j] + map[i][j - 1] - map[i - 1][j - 1];
    		}
    	}
    	//그림을 그려서 이해해보자!!!! -> 설명걸리면 긔릴게
     
    	int k = Integer.parseInt(br.readLine());
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	for (int i = 0; i < k; i++) {
    		st = new StringTokenizer(br.readLine());
    		int a1 = Integer.parseInt(st.nextToken());
    		int b1 = Integer.parseInt(st.nextToken());
    		int a2 = Integer.parseInt(st.nextToken());
    		int b2 = Integer.parseInt(st.nextToken());
    		int result = map[a2][b2] - map[a2][b1 - 1] - map[a1 - 1][b2] + map[a1 - 1][b1 - 1];
    		bw.write(result + "\n");
    	}
    	bw.flush();
    	bw.close();
    }
}
//https://velog.io/@jh5253/%EB%B0%B1%EC%A4%80-15724-%EC%A3%BC%EC%A7%80%EC%88%98-Java%EC%9E%90%EB%B0%94
