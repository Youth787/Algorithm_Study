
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.PriorityQueue;

//이번엔 priority queue를 사용해서 풀어보았습니다.
public class bj11279_2 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder());
        //우선순위 큐의 기본은 최소힙입니다. 그러므로 reverseOrder를 적용합니다.

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            int x = Integer.parseInt(br.readLine());
            if (x == 0) { // 만약 0 이들어왔는데
                if (!queue.isEmpty()) sb.append(queue.poll()).append("\n"); // 큐가 비어있지않다면 첫값을 꺼내 출력 후 삭제
                else { // 큐가 비어있다면 0 출력
                    System.out.println(0);
                    continue;
                }
            }
            // 자연수가 들어왔다면 그냥 큐에 숫자를 추가해주기
            queue.add(x); 
        }
        System.out.println(sb);
    }

}
