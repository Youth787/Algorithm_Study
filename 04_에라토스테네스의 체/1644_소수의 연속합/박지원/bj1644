import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class bj1644 {
	static boolean isPrime(int n) { // 소수입니까? 맞으면 true
		if (n < 2) return false;
		for (int i = 2; i <= Math.sqrt(n); i++) {
			if (n % i == 0) return false;
		} 
		return true;
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int ans = 0; // 연속인 소수를 더해서 n이 되는 경우의 수
		List<Integer> prime = new ArrayList<>(); // n보다 작은수 중 소수 넣어줄 리스트
		for (int i = 2; i <= n; i++) { // 소수면 리스트에 넣어주세요
			if (isPrime(i)) prime.add(i);
		}
		if (isPrime(n)) ans++; // 만약 n이 소수라면 ans++
		for (int i = 0; i < prime.size() - 1; i++) { // 리스트의 0번째부터 n-1까지 연속의 소수를 더해준다.
			int sum = prime.get(i);
			for (int j = i + 1; j < prime.size(); j++) {
				sum += prime.get(j);
				if (sum < n) { // n보다 작으면 계속 더하고
					continue;
				} else if (sum == n) { // n 이면 멈춰주고 다시 i++해서 돌리기
					ans++;
          break;
				} else if (sum > n) { // n보다 더한게 크면 멈추고 i++해서 다시 돌리기
					break;
				}
			}
		}
		
		System.out.println(ans);
		
	}
}
