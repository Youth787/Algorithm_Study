import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class bj1025 {
	
	static int n, m, ans;
	static int[][] map;
	static String[] arr;
	
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		map = new int[n][m];
		ans = -1;
		arr = new String[n + 1];
		
		for (int i = 0; i < n; ++i) {
			arr[i] = br.readLine();
			for (int j = 0; j < m; ++j) {
				map[i][j] = arr[i].charAt(j) - '0';
			}
		}
		
		for (int i = 0; i < n; ++i) { // 행 시작부분 제한
			for (int j = 0; j < m; ++j) { // 열 시작부분 제한
				
				//제한된 범위인 i x j 를 파라미터로 메서드 호출.
				check(j, i);
			}
		}
		
		System.out.println(ans);
	}
	static void check(int c, int r) {
		for (int i = -n; i < n; ++i) { // 행 공차 (64처럼 뒷자리 숫자가 작아도 등차수열이므로 -n부터 n까지로 범위설정)
			for (int j = -m; j < m; ++j) { // 열 공차
				if (i == 0 && j == 0) continue; // 1, 1 / 1, 1 같은 경우는 무시하자
				
				int x = c; // 제한된 열 시작부분
				int y = r; // 제한된 행 시작부분
				
				int sqr = 0; // 만들어진 제곱수
				
				while (x >= 0 && x < m && y >= 0 && y < n) { // 범위체크
					sqr *= 10; // 제곱수생성
					sqr += map[y][x];
					
					int root = (int) Math.sqrt(sqr); // 제곱근 구하기
					
					if (Math.pow(root, 2) == sqr) // 제곱수 판별
						ans = Math.max(ans, sqr);
					
					x += j;
					y += i;
				}
				
				
			}
		}
		
		
	}
}

//https://verycrazy.tistory.com/108
