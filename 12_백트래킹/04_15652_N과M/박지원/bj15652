import java.io.*;
import java.util.StringTokenizer;

public class bj15652 {

    static int n, m;
    static int[] ans;
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));


    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());

        ans = new int[m + 1];

        solve(0, 1);
        bw.flush();
        bw.close();

    }

    //아까 문제와 달리 count, idx를 같이 들고가자.
    static void solve(int count, int idx) throws IOException {
        if (count > m) return;
        if (count == m) { // 만약 ㅈ뽑은 갯수가 m개야?! 진행시켜
            for (int i = 1; i <= m; i++) {
                bw.write(ans[i] + " ");
            }
            bw.write("\n");
            return;
        }
        if (idx > n) return; // 인덱스가 n보다 크면 리턴해줘


        ans[count + 1] = idx; // 뽑은애 ans에 넣어주고
        solve(count + 1, idx); // 뽑았으니 count+1하는데, 자기랑 같은수는 중복되니까 idx는 그대로가주고
        solve(count, idx + 1); // 자기랑 같은 수 다 넣어준거 끝나면, 이제 자기자신 안뽑을거니까 count는 그대로지만 idx는  +1 해주기
        //왜 ans[count + 1]는 초기화를 안하나요 ? 어짜피 다음 재귀함수에 들어가면 ans[count + 1]은 바뀝니다!! 초기화 해줄 필요 없어요!!

    }
}
